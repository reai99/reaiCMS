
(function(z) {
  var reai={
	  use:function(module="",fn){
		  module=module.split("|");
		  for(let i=0;i<module.length;i++){
		  switch(module[i]){
			  case 'form':{
	  	         reai.form= Object.create(form.prototype);
		         reai.form.data={};
		         reai.form.inputDom={};
	  	      }break;
			  case 'element':{reai.element=Object.create(element.prototype);}break;
			  case 'swiper':{new swiper() }break;
		  }  
		  }
		this.ready(function(){fn.call(reai)})	
	  },
	  ready:function(fn){
	  Object.assign(reai,alert.prototype);
	  reai.ajax=function(obj){return new ajax(obj)};
	  Object.assign(reai.ajax.prototype,ajax.prototype);
	  reai.table=function(obj){return new table(obj)};
      Object.assign(reai.table.prototype,table.prototype);
	  reai.verificat=function(a,b){return new verificat(a,b);} 
	  Object.assign(reai.verificat.prototype,verificat.prototype);
	  reai.paging=function(obj){return new paging(obj);}
	  Object.assign(reai.paging.prototype,paging.prototype);
	  reai.file=function(obj){new fileupload(obj);};
	   Object.assign(reai.file.prototype,fileupload.prototype);
	   reai.qqface=function(obj){return new qqFace(obj)}
	   Object.assign(reai.qqface.prototype,qqFace.prototype)
	  //IE兼容处理
	  if(window.addEventListener) { window.addEventListener("DOMContentLoaded", fn, false);
	  } else {
	  var script = document.createElement("script");
	  script.defer = true;
	  script.onreadystatechange = function() {if(script.readyState == "complete") {fn();}
	  }
	  }
	  return window;
	  },
	  serialize: function(dom){
		let input=document.querySelectorAll(dom+" input");
	    let data={};
		for(let i=0;i<input.length;i++){
		  if(input[i].name.indexOf('[]')>0){
			if(!data[input[i].name.split("[]")[0]]){data[input[i].name.split("[]")[0]]=[];}
				data[input[i].name.split("[]")[0]].push(input[i].value)
		    }else{
			     data[input[i].name]=input[i].value;
			}
	     }
		return data;
	},
	setCookie:function(name,value){
		var exp = new Date();
		exp.setTime(exp.getTime() +24*60*60*1000);
		document.cookie = name + "="+ escape(value) + ";expires="+exp.toGMTString();
	 },
	getCookie:function(name){
		var arr,reg=new RegExp("(^| )"+name+"=([^;]*)(;|$)");
		if(arr=document.cookie.match(reg))return unescape(arr[2]);
		else  return null;
	},
	delCookie:function(name){
		var exp = new Date();
		exp.setTime(exp.getTime() - 1);
		var cval=this.getCookie(name);
		if(cval!=null) document.cookie= name + "="+cval+";expires="+exp.toGMTString();
	}
  }
 z.reai= reai;
})(window)


/**
 * 基础元素封装
 */
   function element(){}
			element.prototype={
				init:function(){
					let dom=document.querySelectorAll(".reai-panel-flod");
					for(let j=0;j<dom.length;j++){
					  let flod=dom[j].querySelectorAll(".reai-flod-item .reai-panel-title");
					  let openIndex=dom[j].getAttribute('on')&&dom[j].getAttribute('on').split(',');
					  let openLength=dom[j].getAttribute('on')?dom[j].getAttribute('on').length:0;
					  for (let i = 0; i < flod.length; i++) {
						  flod[i].status=false;
						  /*默认打开*/
						  for (let q = 0; q < openLength; q++) {
						  	 if(openIndex[q]==i){
								 flod[i].status=true;
								 flod[i].parentElement.querySelector(".reai-panel-nav").classList.add("reai-flod-open")
								 flod[i].querySelector("i").className="reai-ico reai-ico-down";
								 }
						  }
						flod[i].addEventListener('click',function(){
							if(!this.status){
							if(dom[j].getAttribute("mode")=="accordtion"){
								for(let q=0;q<flod.length;q++){
								flod[q].parentElement.querySelector(".reai-panel-nav").classList.remove("reai-flod-open");
								flod[q].querySelector("i").className="reai-ico reai-ico-right";
								flod[q].status=false;
								}	
							}
							this.parentElement.querySelector(".reai-panel-nav").classList.add("reai-flod-open")
							this.querySelector("i").className="reai-ico reai-ico-down";
							this.status=true;
							}else{
								this.parentElement.querySelector(".reai-panel-nav").classList.remove("reai-flod-open")
								this.querySelector("i").className="reai-ico reai-ico-right";
								this.status=false;
							}
						},false);
					  }
					}
				 }
			}
/**
 * qqface 表情包
 * @param {Object} option
 */
		function qqFace(option){this.init(option);}
		qqFace.prototype={
			init:function(option){
				let _this=this;
				this.path=option.path;
				this.air=option.air;
				this.content=document.querySelector(option.content);
				this.number=option.num;
				document.querySelector(this.air).addEventListener('click',function(e){
					e.stopPropagation();
					if(_this.status==null){_this.getIco();_this.faceTableHidden();}
					else if(_this.status==1){_this.faceTable.classList.add('face-hidden');_this.status=0;}
					else if(_this.status==0){_this.faceTable.classList.remove('face-hidden');_this.faceTableHidden();}
				})
				
			},
			getIco:function(){
				this.status=1;
				let _this=this;
				let faceBox=document.createElement('div');
				faceBox.className="face-box";
				let object=document.querySelector(".reai-liuyan .liuyan-power");
				let table=document.createElement('table');
				this.faceTable=table;
				table.className="qqFace-table";
				table.border="0";
				object.appendChild(faceBox);
				faceBox.appendChild(table);
				for (let i = 1; i <= this.number; i++) {
				   var tr;
				   if((i-1)%10==0){tr=document.createElement('tr');table.appendChild(tr);}
				   var th=document.createElement('th');
				   th.innerHTML='<img src="'+this.path+'/'+i+'.gif">';
				   tr.appendChild(th);
				   th.addEventListener('click',function(e){
					   e.stopPropagation();
					  _this.content.value=_this.content.value+'[ico_'+i+']';
				   })
				}
			},
			faceTableHidden:function(){
				let _this=this;
				document.querySelector("body").onclick=function()
				{
					document.querySelector('.qqFace-table').classList.add('face-hidden');
					this.onClick=null;
					_this.status=0;
				}
			},
		    replace_face:function(str){
				str = str.replace(/\</g,'&lt;');
				str = str.replace(/\>/g,'&gt;');
				str = str.replace(/\n/g,'<br/>');
				str = str.replace(/\[ico_([0-9]*)\]/g,"<img src='"+this.path+"/$1.gif' border='0' />");
				return str;
			}
		}
/**
 * 文件上传
 */			
	function fileupload(obj){this.init(obj);}
	fileupload.prototype={
				  init:function(qq){
					  this.file=[];
					  let filename="点击或拖入文件上传";
					 let box=document.querySelectorAll(".reai-file");
		 			 for (let i = 0; i < box.length; i++) {
						 let obj={};
						 if(box[i].getAttribute('value')){filename=box[i].getAttribute('value');}
						 obj.filename=filename;
						 obj.dom=box[i];
						 obj.data="";
						 this.creatBox(obj,filename,qq);
		 			 	this.file.push(obj)
					 }
					 qq.callback(this.getData())
				  },
				  creatBox:function(air,value,qq){
					  if(!qq.limit.size){qq.limit.size=2000000;}
					 let  _this=this;
					  let div=document.createElement("div");
					  let ico=document.createElement('i');
					  ico.className="reai-ico reai-ico-upload-drag";
					  div.className="file-box";
					  let  span=document.createElement("span");
					  let input=document.createElement('input');
					  input.type="file";input.className="file-value";
					  div.appendChild(ico);
					  air.ico=ico;air.inputfile=input;
					  air.inputtext=span;
					  span.innerText=value;
					  input.name=air.dom.attributes.name?air.dom.attributes.name.nodeValue:'';
					  air.name=input.name;
					  div.appendChild(span);
					  air.dom.appendChild(div);air.dom.appendChild(input);
					  let domLimit;
					  if(air.dom.attributes.value)air.dom.attributes.removeNamedItem('value');
					  if(air.dom.attributes.name) air.dom.attributes.removeNamedItem('name');
					  if(air.dom.attributes.type&&air.dom.attributes.size){
						 input.domLimit={'type':air.dom.attributes.type.nodeValue,'size':air.dom.attributes.size.nodeValue}; 
					     qq.limit.size=input.domLimit.size;
						 air.dom.attributes.removeNamedItem('type');
						 air.dom.attributes.removeNamedItem('size');
					  }
					  input.addEventListener('change',function(){
						  let limit=this.domLimit?this.domLimit.type.split(","):qq.limit.type.split(',');
						  for(let i=0;i<limit.length;i++){
							  if(limit[i]==this.files[0].type&&qq.limit.size>this.files[0].size){
								  this.disabled='disabled';
								  air.data= this.files[0];
								  span.innerText=air.data.name
								  ico.classList.replace('reai-ico-upload-drag','reai-ico-upload');
								  qq.callback(_this.getData())
								  if(!air.offOn){_this.offOn(air,qq);} 
								 return ;
							  }
						  }
						  input.value="";
						  reai.msg('上传文件格式或尺寸有误!!!')
					  },false)
				  },
				  offOn:function(air,qq){
					  let _this=this;
					  let ico=document.createElement('i');
					   ico.className="reai-ico reai-ico-close-fill";
					   air.offOn=true;
					   air.closeico=ico;
					   air.dom.appendChild(ico);
					   ico.addEventListener('click',function(){
					   if(air.inputfile.attributes.disabled){air.inputfile.attributes.removeNamedItem('disabled')}
						   air.inputfile.value="";
	                       air.data="";
						   air.ico.classList.replace('reai-ico-upload','reai-ico-upload-drag');
						   air.inputtext.innerText=air.filename;
						   air.offOn=false;
						   qq.callback(_this.getData())
						   air.closeico.remove();
					  },false)
				  },
				  getData:function(){
					  let data=new Object();
					  for(let i=0;i<this.file.length;i++){
						  data[this.file[i].name]=this.file[i].data
					  }
					  return data;
				  }
					
	}		
/**
 * 轮播图封装
 */			
function swiper() {this.getObj();}
swiper.prototype = {
  init: function init(obj) {
    obj.item[obj.itemIndex].classList.add("swiper-this");
    if (obj.data.autoplay) {
      this.autoplay(obj, parseInt(obj.data.autoplay));
    } //自动播放
    if (obj.data.vertical === "true") {
      //开启纵向
      obj.airObj.classList.add("swiper-vertical");
      if (obj.control.left != null && obj.control.right != null) {
        obj.control.left.className = "swiper-control-left reai-ico reai-ico-up";
        obj.control.right.className = "swiper-control-right reai-ico reai-ico-down";
      }
    }

    this.changeDots(obj);
    this.control(obj);

    if (obj.airObj.classList.contains('swiper-touch')) {
      this.touch(obj);
    }
  },
  getObj: function getObj() {
    this.air = [];
    var swiper = document.querySelectorAll(".reai-swiper");

    for (var z = 0; z < swiper.length; z++) {
      var obj = {};
      obj.airObj = swiper[z];
      obj.item = swiper[z].querySelectorAll(".swiper-item");
      obj.data = {};
      obj.dots = [];

      for (var i = 0; i < swiper[z].attributes.length; i++) {
        obj.data[swiper[z].attributes[i].name] = swiper[z].attributes[i].value;
      }

      obj.itemIndex = obj.data.index == null ? 0 : parseInt(obj.data.index);

      if (obj.data['indicator-dots'] == 'true') {
        this.addDots(obj);
      } //增加dots


      obj.control = {};

      if (obj.data['control'] == "true") {
        var divLeft = document.createElement("div");
        divLeft.className = "swiper-control-left reai-ico reai-ico-left";
        var divRight = document.createElement("div");
        divRight.className = "swiper-control-right reai-ico reai-ico-right";
        obj.control.left = divLeft;
        obj.control.right = divRight;
        swiper[z].appendChild(divRight);
        swiper[z].appendChild(divLeft);
      }

      this.air.push(obj);
      this.init(obj);
    }
  },
  autoplay: function autoplay(obj) {
    var time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4000;

    var _this = this;

    obj.timer = setInterval(function () {
      _this.toright(obj);
    }, time);
  },
  control: function control(obj) {
    var _this = this;

    if (obj.control.left != null && obj.control.right != null) {
      obj.control.left.addEventListener('click', function (e) {
        e.stopPropagation();
        if (!obj.leftStatus) {
          _this.toleft(obj);
        }

        _this.runTimer(obj);
      }, false);
      obj.control.right.addEventListener('click', function (e) {
        e.stopPropagation();

        if (!obj.rightStatus) {
          _this.toright(obj);
        }

        _this.runTimer(obj);
      }, false);
    }
  },
  toright: function toright(obj) {
    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
    obj.rightStatus = true;
    var _this = this;
    var nowIndex = index === "" ? (obj.itemIndex + 1) % obj.item.length : index;
    obj.item[obj.itemIndex].classList.add("swiper-nowNext");
    obj.item[nowIndex].className = "swiper-item swiper-this swiper-next";
    setTimeout(function () {
      obj.item[obj.itemIndex].className = "swiper-item";
      obj.itemIndex = nowIndex;
      obj.item[obj.itemIndex].className = "swiper-item swiper-this";
      obj.rightStatus = false;
      _this.changeDots(obj);
    }, 300);

  },
  toleft: function toleft(obj) {
    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
    obj.leftStatus = true;
    var _this = this;
    obj.item[obj.itemIndex].classList.add("swiper-nowPre");
    var nowIndex = index === "" ? obj.itemIndex - 1 < 0 ? obj.item.length - 1 : obj.itemIndex - 1 : index;
    obj.item[nowIndex].className = "swiper-item swiper-this swiper-pre";
    setTimeout(function () {
      obj.item[obj.itemIndex].className = "swiper-item";
      obj.itemIndex = nowIndex;
      obj.item[obj.itemIndex].className = "swiper-item swiper-this";
      obj.leftStatus = false;

      _this.changeDots(obj);
    }, 300);
  },
  addDots: function addDots(obj) {
    var _this = this;

    var div = document.createElement("div");
    div.className = "swiper-dots-box";
    var ul = document.createElement("ul");

    for (var i = 0; i < obj.item.length; i++) {
      var li = document.createElement("li");
      ul.appendChild(li);
      li.index = i;
      obj.dots.push(li);
      li.addEventListener('click', function (e) {
        e.stopPropagation();

        if (this.index > obj.itemIndex) {
          _this.toright(obj, this.index);
        } else if (this.index < obj.itemIndex) {
          _this.toleft(obj, this.index);
        }

        _this.runTimer(obj);
      }, false);
    }

    div.appendChild(ul);
    obj.airObj.appendChild(div);
  },
  changeDots: function changeDots(obj) {
    if (!obj.leftStatus && !obj.rightStatus) {
      for (var i = 0; i < obj.dots.length; i++) {
        obj.dots[i].className = "";
      }

      if (obj.dots.length > 0) obj.dots[obj.itemIndex].className = "dots-this";
    }
  },
  runTimer: function runTimer(obj) {
    if (obj.data.autoplay) {
      clearTimeout(obj.timer);
      this.autoplay(obj, parseInt(obj.data.autoplay));
    } //自动播放

  },
  touch: function touch(obj) {
    var _this = this;
    var now, move, moveSize, lastIndex, moveDir;
    if (obj.data["vertical"] == "true") {
      obj.touchDir = "top";
    } else {
      obj.touchDir = "left";
    }

    obj.airObj.addEventListener('touchstart', function (e) {
      now = {};
      move = {};
      now = getCoord(e);
      clearInterval(obj.timer);
      now.boxSize = getSize(this);
    
    }, false);
    obj.airObj.addEventListener('touchmove', function (e) {
      var doing = getCoord(e);
      move = {
        x: (doing.x - now.x) / now.boxSize.width,
        y: (doing.y - now.y) / now.boxSize.height,
        time: doing.timeStamp - now.timeStamp
      };

      if (obj.data["vertical"] == "true") {
        moveDir = move.y;
      } else {
        moveDir = move.x;
      }

      if (Math.abs(moveDir) > 0.05) {
        toMove(moveDir, obj.touchDir);
      }
    }, false);
    obj.airObj.addEventListener('touchend', function (e) {
      lastIndex = obj.itemIndex;
      if (Math.abs(moveDir) > 0.5) {
        if (moveDir < 0) {
          toMove(-1, obj.touchDir);
          obj.itemIndex = (obj.itemIndex + 1) % obj.item.length;
        } else {
          toMove(1, obj.touchDir);
          obj.itemIndex = (obj.itemIndex - 1 < 0 ? obj.item.length - 1 : obj.itemIndex - 1) % obj.item.length;
        }

        _this.changeDots(obj);
      } else {
        toMove(0, obj.touchDir, moveDir);
      }
      _this.autoplay(obj);
      clearStyle(obj, lastIndex);
       moveDir=0;
    }, false);

    function getCoord(obj) {
      var e = obj.changedTouches[0];
      return {
        y: e.pageY || e.clientY,
        x: e.pageX || e.clientX,
        timeStamp: obj.timeStamp
      };
    }

    function getSize(obj) {
      return {
        width: obj.offsetWidth || obj.clientWidth,
        height: obj.offsetHeight || obj.clientHeight
      };
    }

    function toMove(step) {
      moveSize = Math.abs(step) > 1 ? 1 : Math.abs(step);
     if (step == 1 || step == -1 || step == 0) {
        obj.item[obj.itemIndex].style.transition = arguments[1] + " .2s";
        obj.item[(obj.itemIndex + 1) % obj.item.length].style.transition = arguments[1] + " .2s";
        obj.item[obj.itemIndex - 1 < 0 ? obj.item.length - 1 : obj.itemIndex - 1].style.transition = arguments[1] + " .2s";
      }

      if (step < 0 || parseInt(arguments[2]) == 0) {
        obj.item[obj.itemIndex].style[arguments[1]] = -moveSize * 100 + "%";
        obj.item[(obj.itemIndex + 1) % obj.item.length].style[arguments[1]] = -moveSize * 100 + 100 + "%";
        obj.item[(obj.itemIndex + 1) % obj.item.length].style.display = "block";
      } else if (step > 0 || parseInt(arguments[2]) == -0) {
        obj.item[obj.itemIndex].style[arguments[1]] = moveSize * 100 + "%";
        obj.item[obj.itemIndex - 1 < 0 ? obj.item.length - 1 : obj.itemIndex - 1].style[arguments[1]] = moveSize * 100 - 100 + "%";
        obj.item[obj.itemIndex - 1 < 0 ? obj.item.length - 1 : obj.itemIndex - 1].style.display = "block";
      }
    }

    function clearStyle(obj, last) {
      setTimeout(function () {
        for (var i = 0; i < obj.item.length; i++) {
          obj.item[i].style[obj.touchDir] = null;
          obj.item[i].style.display = null;
          obj.item[i].style.transition = null;
        }
        obj.item[last].classList.remove("swiper-this");
        obj.item[obj.itemIndex].classList.add("swiper-this");
      }, 300);
    }
  }
};

/**
 * 动态表格封装
 * @param {Object} obj
 */
	function table(obj){this.vessel=[];this.init(obj);}
	table.prototype={
		templete:function(data){
		 let _this=this;
	     let headTh=document.querySelectorAll(".reai-table thead .reai-table-title th");
		 let tBody=document.querySelector('.reai-table tbody');
		 let  tr=document.createElement('tr');
		 let check=document.createElement('th');check.innerHTML="<input type='checkbox'>";
		  tr.appendChild(check);
		  let obj={};obj.id=data.id;obj.dom=tr;obj.checked=headTh[0].querySelector('input').checked;
		  for (let i in data) {let th=document.createElement('th');th.innerText=data[i];tr.appendChild(th); }
		 if(this.controller&&this.controller.operat==true){
		 let operator=document.createElement('th');
		 operator.innerHTML='<button type="button" class="reai-btn reai-btn-mn reai-table-edit">编辑</button>\
		 <button type="button" class="reai-btn reai-btn-mn reai-btn-danger">删除</button>';
		  tr.appendChild(operator);
		  operator.querySelector(".reai-btn-danger").onclick=function(){
			  let that=this;
		      reai.warnLink('确定要删除吗?',function(){
				  tBody.removeChild(tr);
				  for (let i in _this.vessel) {
				  if(_this.vessel[i].id==data.id){_this.vessel.splice(i,1);_this.callback(data.id,-1); break;}}
				  that.onclick=null;
			      });
		      };
			operator.querySelector('.reai-table-edit').onclick=function(){
				_this.editor(data)
				}
		 }
			this.bindCheck(headTh[0].querySelector('input'));
			check.querySelector('input').addEventListener('click',function(){ 
			  for (let i in _this.vessel) {if(_this.vessel[i].id==data.id){ _this.vessel[i].checked=this.checked;break;}}
					 },false);
			this.vessel.push(obj);
		  },
	   init:function(obj){
		   let box=document.querySelector(".reai-table tbody");
		   let checkAll=document.querySelector('.reai-table thead th input');
		   let idSort=document.querySelector('.reai-table .reai-table-sort');
		   let _this=this;
		   if(typeof obj.bindsearch!=='undefined'){this.search(obj.bindsearch);}
		   this.submitUrl=obj.url;
		   this.editCallback=obj.customEdit;
		   this.pageData=obj.paging?obj.paging:"";
		   this.searchValue=obj.searchValue;
		   if(typeof obj.data ==='undefined'){
			   obj.data=this.dataSubmit(3,this.pageData);
			 }else{
				 if(typeof obj.data ==='undefined'||!obj.data){
					 let data={'index':obj.data.index,'maxnum':obj.data.maxnum};
					 obj.data=this.dataSubmit(obj.data.way,data);
				 }
				
			}
			if(typeof obj.paging!=='undefined'&&obj.paging!=''){this.paging();}
		   let initLength=typeof obj.data==='object'?obj.data.length:[];
		   this.controller=obj.controller;
          for (let i = 0; i < initLength; i++) {this.templete(obj.data[i]);};
          	this.sort();
		   checkAll.addEventListener('click',function(){ _this.bindCheck(this);},false);
		   if(obj.controller&&obj.controller.del){   
			  let delBtn=document.querySelector(obj.controller.del);
			  delBtn.addEventListener('click',function(){
				    let delIndex=[],delDom=[]; 
				 	for (let i=0;i<_this.vessel.length;i++) {
						if(_this.vessel[i].checked==true){
							delIndex.push(_this.vessel[i].id);
							delDom.push(_this.vessel[i])
							}
						}
					  if(delIndex.length>0){
						 reai.warnLink('确定要删除选择项吗',function(){
							 _this.callback(delIndex,-1);
							for (let i=0;i<delDom.length;i++) {box.removeChild(delDom[i].dom)}  
							 });
					 }else{reai.msg('未选中任何项');}
			   },false);
		   }
           if(obj.controller&&obj.controller.edit){
			   let editBtn=document.querySelector(obj.controller.edit);
			   editBtn.addEventListener('click',function(){
				   _this.editor();
			   },false)
		   }
           idSort.querySelector('.triangle_up').addEventListener('click',function(){
			   box.innerHTML="";
			  for (let i = _this.vessel.length-1; i >=0; i--) {	box.appendChild(_this.vessel[i].dom)}
			  	_this.sortStatus=0;
		   },false);
		   idSort.querySelector('.triangle_down').addEventListener('click',function(){
		   		box.innerHTML="";
		   		for (let i =0; i <_this.vessel.length; i++) {box.appendChild(_this.vessel[i].dom)  }
		   		_this.sortStatus=1;
		   },false);
	     },
		 callback:function(index,status,data){
		 	switch(status){
		 		case -1:this.dataSubmit(status,{'id':index});break;
		 		case 1:this.dataSubmit(status,data);break;
		 		case 2:this.dataSubmit(status,data);break;
		 	}
		 },
		 dataSubmit:function(way){
		 		   let _this=this;
		 		   let data=arguments[1]?arguments[1]:"";
				   let searchValue=(this.searchValue||this.searchValue=="")?('&search='+this.searchValue):"";
		 		   reai.ajax({
		 		   	method:'post',
		 		   	url:_this.submitUrl+'?way='+way+searchValue,
		 		   	data:data,
		 		   	success:res=>{
					
		 		   		data=JSON.parse(res);
						_this.arttotal=data.total;
		 		   	 if(data.code==1||data.code==2){setTimeout(function(){location.reload()},1000);}
		 		   	if(data.code&&data.msg){reai.msg(data.msg);return false;}
		 		   	},
		 		   	error:res=>{
		 		   		reai.msg(res);
		 		   	}
		 		   })
		 		   return data.data;
		 },
	   bindCheck:function(obj){
		  for (let i in this.vessel) {
			 this.vessel[i].dom.querySelectorAll('th')[0].querySelector('input').checked=obj.checked;
			 this.vessel[i].checked=obj.checked;
			 }
	     },
	   sort:function(){
		   let tBody=document.querySelector('.reai-table tbody');
		   let box=document.querySelector(".reai-table tbody");
		   let _this=this;
		   box.innerHTML="";
		    if(this.sortStatus!=1){
			  for (let i = _this.vessel.length-1; i >=0; i--) {	box.appendChild(_this.vessel[i].dom)}
		   }else{  for (let i =0; i <_this.vessel.length; i++) {box.appendChild(_this.vessel[i].dom)  } }
		   
	   },
	   editor:function(data=""){
		   let editDom=document.querySelector(".reai-table-change");
		   if(!editDom){ this.editCallback&&this.editCallback(data.id); return false;}
		   if(!editDom.status){
			    let  hidden=document.createElement("div");
			    hidden.className="reai-alert-hidden";
				document.querySelector('body').appendChild(hidden);
		   		editDom.status=true;
		   		editDom.classList.add('reai-table-open');
		   		editDom.style.marginTop=-editDom.clientHeight/2+"px";
				let input=editDom.querySelectorAll(".reai-input");
				for(let i=0;i<input.length;i++){
				input[i].classList.remove('form-warn');input[i].value="";
				 if(data!=""){
				   input[i].value=data[input[i].name]?data[input[i].name]:'';
				  if(i==0) {input[0].setAttribute('readonly',"readonly");input[0].style.background="#f6f6f6";}
				 }else{
					if(i==0){input[0].removeAttribute('readonly');input[0].style="";} 
				 } 
				}
		   		editDom.querySelector(".table-change-return").onclick=function(){
		   		     editDom.classList.remove('reai-table-open');
					 document.querySelector('body').removeChild(hidden);
		   		     editDom.status=false;
		   		     this.onclick=null;
					 document.querySelector('.table-change-submit').onclick=null;
		   		  }
		   		let form=reai.form;
				let _this=this;
				let status=data==""?1:2;
				let index=data==""?-1:data['id'];
		   		form.submit(".table-change-submit",function(data){
		   			_this.callback(index,status,data);
					
		   		})
		    }
	   },
	   search:function(bind){
		   let _this=this;
		   let search=document.querySelector(bind.dom);
		   search.addEventListener(bind.type,function(){
		   	let table=document.querySelector(".reai-table tbody");
			let page=document.querySelector('.reai-page');
			let removeBox=['.reai-page-box','.page-next','.page-pre'];
			for(let i=0;i<3;i++){
				try{page.querySelector(removeBox).remove();}catch(e){}
			}
		   	for(let i=0;i<table.children.length;){ table.children[i].remove(); }
		       reai.table({
		   		data:{
		   			way:4,
		   			value:_this.searchValue,
					'maxnum':_this.pageData.maxnum,
					'index':_this.pageData.index,
		   		},
		       	url:_this.submitUrl,
		       	controller:_this.controller,
				paging:_this.pageData,
				searchValue:document.querySelector(".search-input").value,
		       	customEdit:function(id){
		       		location.href=`/admin/article/editart/id/${id}.html`;
		       	}
		       });	
		   },false)
	   },
	   paging:function(){
		   let _this=this;
		  this.pageData.total=this.arttotal;
		   let page=reai.paging([_this.pageData]);
		   page.event[0].callback=function(res){
			   let table=document.querySelector(".reai-table tbody");
			   for(let i=0;i<table.children.length;){ table.children[i].remove(); }
			   reai.table({
			   	data:{way:3,'maxnum':_this.pageData.maxnum,'index':res},
			   	url:_this.submitUrl,
			   	controller:_this.controller,
				searchValue:_this.searchValue,
			   	customEdit:function(id){
			   		location.href=`/admin/article/editart/id/${id}.html`;
			   	}
			   });	
		   }
	   }
	}
/**
 * 分页
 */
	function paging(obj){this.init(obj)}
	paging.prototype={
		init:function(data){
			this.event=[];
			let pagedom=document.querySelectorAll(".reai-page");
			for(let i=0;i<pagedom.length;i++){
				let obj={};obj.dom=pagedom[i];
				if(typeof data[i].distance ==='undefined'){data[i].distance=5}
				if(typeof data[i].index ==='undefined'){data[i].index=1}
				obj.data=data[i];
				obj.callback=data[i].callback;
				this.event.push(obj);
				this.createpage(this.event[i]);
			}
		},
		createpage:function(obj){
			let start=arguments[1]?arguments[1]:0;
			let _this=this;
			let pagenum=Math.ceil((obj.data.total-start*obj.data.maxnum)/obj.data.maxnum);
			let creatnum=(pagenum>obj.data.distance)?obj.data.distance:pagenum;
			this.createpre(obj);
			if(typeof obj.pagebox ==='undefined'){
				let pagebox=document.createElement("div");
				 pagebox.className="reai-page-box";
				obj.dom.appendChild(pagebox);
				obj.pagebox=pagebox;
			}
			obj.list=[];
			for (let i = start; i < creatnum+start; i++) {
				let li=document.createElement('span');
				if(obj.data.index==i+1){li.className="page-this";}
				li.innerText=i+1;
				obj.list.push(li);
				obj.pagebox.appendChild(li);
				li.addEventListener('click',function(){
					for(let j=0;obj.list.length>j;j++){obj.list[j].classList.remove("page-this")}
					this.className="page-this";
					obj.data.index=i+1;
					_this.createnext(obj)
					_this.createpre(obj);
					obj.callback&&obj.callback(obj.data.index);
				})
			}
		
		 this.createnext(obj)
		},
		createnext:function(obj){
			let _this=this;
			let pagenum=Math.ceil(obj.data.total/obj.data.maxnum);
			let dirnext=(pagenum>1&&obj.data.index!==pagenum)?true:false;
			if(dirnext&&!obj.nexStatus){
				let next=document.createElement('span');
				next.className="page-next";
				next.innerText="下一页";
				obj.dom.appendChild(next);
				next.onclick=function(){
					for(let j=0;obj.list.length>j;j++){obj.list[j].classList.remove("page-this")}
					if((obj.data.index)%obj.data.distance==0){
						obj.data.index=obj.data.index+1;
						for(let z=0;z<obj.list.length;z++){obj.list[z].remove()}
						_this.createpage(obj,obj.data.index-1);
					}else{
						obj.data.index=obj.data.index+1;
						obj.list[(obj.data.index-1)%obj.data.distance].className="page-this";
						_this.createnext(obj)
						_this.createpre(obj)
					}
					obj.callback&&obj.callback(obj.data.index);
				}
				obj.nexStatus=true;
			}else if(!dirnext&&obj.nexStatus){
				let next=obj.dom.querySelector(".page-next");
				next.onclick=null;
				next.remove();
				obj.nexStatus=false;
			}
			
		},
		createpre:function(obj){
			let _this=this;
			let pagenum=Math.ceil(obj.data.total/obj.data.maxnum);
			let dirpre=(pagenum>1&&obj.data.index!==1)?true:false;
			if(dirpre&&!obj.preStatus){
				let pre=document.createElement('span');
				pre.className="page-pre";
				pre.innerText="上一页";
				obj.dom.prepend(pre);
				pre.onclick=function(){
					for(let j=0;obj.list.length>j;j++){obj.list[j].classList.remove("page-this")}
					
					if((obj.data.index-1)%obj.data.distance==0){
						obj.data.index=obj.data.index-1;
						for(let z=0;z<obj.list.length;z++){obj.list[z].remove()}
						_this.createpage(obj,obj.data.index-obj.data.distance);
					}else{
					obj.data.index=obj.data.index-1;
					obj.list[(obj.data.index-1)%obj.data.distance].className="page-this";
					_this.createpre(obj)
					_this.createnext(obj)
					}
						obj.callback&&obj.callback(obj.data.index);
				}
				obj.preStatus=true;
			}else if(!dirpre&&obj.preStatus){
				let pre=obj.dom.querySelector(".page-pre");
				pre.onclick=null;
				pre.remove();
				obj.preStatus=false;
			}
		
		}
	}

/**
 * AJAX封装
 * @param {Object} obj
 */
 function ajax(obj){this.run(obj)}
	  ajax.prototype={
		init:function(){
			  let xmlHttp = false;
			  	try { xmlHttp = new ActiveXObject("Msxml2.XMLHTTP"); 
			  	} catch (e) { 
			  	try { xmlHttp =  new ActiveXObject("Microsoft.XMLHTTP"); 
			  	} catch (e2) {xmlHttp =  false; } 
			  	} 
			  	if (!xmlHttp && typeof XMLHttpRequest != 'undefined') { 
			  		xmlHttp =  new XMLHttpRequest(); 
			  	}
			  	return xmlHttp;
			           },
		params:function(data){let arr = [];for(let item in data){arr.push(item+"="+data[item]);} return arr.join("&");  },
	    run:function(obj){
			 let xhr=this.init();
			 switch(obj.method.toLowerCase()){
				 case 'get':obj.data=this.params(obj.data);obj.url+=obj.url.indexOf("?")==-1? "?"+obj.data : "&"+obj.data;break;
				 case 'post':
				   if(obj.dataType&&obj.dataType.toLowerCase()==='jsonp') {
					   /*处理跨域回调函数*/
					   obj.data=this.params(obj.data);
					   this.callbackName=('jsonp_' + Math.random()).replace(".", "");
					   obj.url+=obj.url.indexOf("?")==-1? "?"+obj.data : "&"+obj.data;
					   obj.url+="&callback="+this.callbackName;
				    }else{
				       let formData=new FormData();
				       for(let item in obj.data){formData.append(item,obj.data[item])};
				       obj.data=formData;
				   }
				    break;
			 }
             /*跨域处理*/
			 if(obj.dataType&&obj.dataType.toLowerCase()==='jsonp'){
                let head = document.getElementsByTagName('head')[0];
                let script=document.createElement('script'); script.type="text/javascript";
                head.appendChild(script);
                script.onerror=function(){obj.error && obj.error("Request failed")}
                window[this.callbackName] = function(json) {  //请求成功回调函数
                head.removeChild(script);
                window[this.callbackName] = null;
                obj.success && obj.success(json); }
                script.src = obj.url;
                return ;
			 }else{
			    xhr.onreadystatechange=function(){
					if(xhr.readyState==4){
                        if(xhr.status==200){
                        	if(obj.dataType&&obj.dataType.toLowerCase()==='json'){
                                try{obj.success &&obj.success(JSON.parse(xhr.responseText));}catch(e){obj.error("json数据格式错误");}
                                 return ;
                        	}else{obj.success &&obj.success(xhr.responseText);}
                        	
                        }else{
                        	obj.error &&obj.error(xhr.statusText)
                        }
					}
				 }
				   obj.async=obj.async?obj.async:false;
                   xhr.open(obj.method, obj.url,obj.async);
				   xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");
                //  xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded;charset=utf-8");
			    switch(obj.method.toLowerCase()){
			 	   case 'post':xhr.send(obj.data);break;
			 	   case 'get':xhr.send();break;
			          }
			     } 
		  },
		  
	  }

/**
 * 信息框
 */
function alert(){}
alert.prototype={
	     msg:function(msg){
	     let _this=this;
	     this.removeAll(".reai-alert-msg");
	     var b_box=document.createElement("div");
	      b_box.className="reai-alert-msg";
	      b_box.innerText=msg;
	      document.querySelector('body').appendChild(b_box);
	    //  b_box.style.marginLeft=-(b_box.offsetWidth)/2+"px";
	      setTimeout(function(){_this.close(b_box);},2200);
	     },
		/**
		 * 警告弹窗
		 * @param {Object} text:弹窗内容
		 * @param {Object} type:窗口位置 参数：居中(center) 左上(tleft)、左下(bleft)、右上(tright)、右下(bright)
		 */
		warn:function(text,type="center"){
		  this.removeAll(".alert-"+type);
	      var b_box=document.createElement("div");
		  var t_box=document.createElement('div');
		  var n_box=document.createElement("div");
		  var btn_box=document.createElement("div");
		  var btn=document.createElement("input");
		  let _this=this;
		  b_box.className="reai-alert alert-"+type;b_box.appendChild(t_box);b_box.appendChild(n_box);b_box.appendChild(btn_box);
		  t_box.className="reai-alert-tt";t_box.innerHTML="警告框";
		  n_box.className="reai-alert-nav";n_box.innerHTML=text;
		  btn_box.className="reai-alert-btn";btn_box.appendChild(btn);
		  btn.type="button";btn.value="关闭";
		 document.querySelector('body').appendChild(b_box);
		 if(type=="center"){b_box.style.marginTop=-(b_box.offsetHeight)/2+"px";b_box.style.marginLeft=-(btn_box.offsetWidth)/2+"px";}
		 btn.addEventListener('click',function(){_this.close(b_box);});
		  
		},
		/**
		 * 自动消失信息框
		 * @param {Object} text:信息框内容
		 * @param {Object} px:距离底部的位置 单位px
		 * @param {Object} time:消失时间 单位ms
		 */
	    autodisplay:function(text,px=80,time){
	      this.removeAll(".reai-alert-timer");
	      var b_box=document.createElement("div");
		  let _this=this;
		  b_box.innerHTML=text;
		  b_box.className="reai-alert-timer";
		  b_box.style.width=text.length*16+"px";
		  b_box.style.marginLeft=-(text.length*8+10)+"px";
		  b_box.style.bottom=px+"px"
		  document.querySelector("body").appendChild(b_box);
		  setTimeout(function(){_this.close(b_box);},time);
		  
		},
		/**
		 * 公告框（自动居中）
		 * @param {Object} text:信息框内容
		 */
		gonggao:function(text){
	      var b_box=document.createElement("div");
		  var t_box=document.createElement('div');
		  var n_box=document.createElement("div");
		  var btn_box=document.createElement("div");
		  var btn=document.createElement("input");
		  var hidden=document.createElement("div");
		  let _this=this;
		  hidden.className="reai-alert-hidden";
		  b_box.className="reai-alert-gg";b_box.appendChild(t_box);b_box.appendChild(n_box);b_box.appendChild(btn_box);
		  t_box.className="reai-alert-tt";t_box.innerHTML="公告";
		  n_box.className="reai-alert-nav";n_box.innerHTML=text;
		  btn_box.className="reai-alert-btn";btn_box.appendChild(btn);
		  btn.type="button";btn.value="关闭";
		 document.querySelector('body').appendChild(b_box);
		 document.querySelector("body").appendChild(hidden);
		 btn.addEventListener('click',function(){_this.closeBg(b_box,hidden)});
		},
		/**
		 * 右下角渐进提示框
		 * @param {Object} txt:信息框内容
		 */
		hint:function(txt){
			let _this=this;
			this.removeAll('.reai-alert-hint');
			var b_box=document.createElement("div");
	    	var text=document.createTextNode(txt);
		    b_box.appendChild(text);
	    	b_box.className="reai-alert-hint";
	    	b_box.style.bottom="0px";
	    	document.querySelector("body").appendChild(b_box);
	    	setTimeout(function(){
	    	var all_b_box=document.querySelectorAll(".reai-alert-hint");
		     for(var i=0;i<all_b_box.length;i++)
	        all_b_box[i].style.bottom=parseInt(all_b_box[i].style.bottom)+60+"px";
		},100);
		setTimeout(function(){b_box.remove();},3600);
		setTimeout(function(){b_box.style.opacity="0";},2300);
		
		},
		/**
		 * 警告跳转框
		 * @param {Object} text：信息框内容
		 * @param {Object} fn:回调函数
		 */
		warnLink:function(text,fn){
		  var b_box=document.createElement("div");
		  var t_box=document.createElement('div');
		  var n_box=document.createElement("div");
		  var btn_box=document.createElement("div");
		  var btn=document.createElement("input");
		  var btn1=document.createElement("input");
		  var hidden=document.createElement("div");
		  let _this=this;
		  hidden.className="reai-alert-hidden";
		  b_box.className="reai-alert reai-alert-link";b_box.appendChild(t_box);b_box.appendChild(n_box);b_box.appendChild(btn_box);
		  t_box.className="reai-alert-tt";t_box.innerHTML="信息提示框";
		  n_box.className="reai-alert-nav";n_box.innerHTML=text;
		  btn_box.className="reai-alert-btn"; btn_box.appendChild(btn1); btn_box.appendChild(btn);
		  btn1.type="button";btn1.value="确定";
		  btn.type="button";btn.value="取消";
		 document.querySelector('body').appendChild(b_box);
			 document.querySelector("body").appendChild(hidden);
		  btn1.addEventListener('click',function(){fn();setTimeout(function(){_this.closeBg(b_box,hidden);},80)});
	      b_box.style.marginTop=-(b_box.offsetHeight)/2+"px";
	      b_box.style.marginLeft=-(btn_box.offsetWidth)/2+"px";
		 btn.addEventListener('click',function(){_this.closeBg(b_box,hidden);});
		},
		close:function(flag){
		   try{document.querySelector('body').removeChild(flag);}catch(e){}
		},
		closeBg:function(flag,hidden){
			try{
			 document.querySelector('body').removeChild(flag);
			 document.querySelector('body').removeChild(hidden);}catch(e){}
			 
		},
		removeAll:function(data){
	      let dom=document.querySelectorAll(data);
	      let body=document.querySelector("body");
	     for(let i=0;i<dom.length;i++){
	          body.removeChild(dom[i]);
	     }
		}
}

/**
 *验证码
 */
	function verificat(numArray,num){this.draw(numArray,num);}
	 verificat.prototype={
		 draw:function(show_num,maxNum){
		  var _this=this;
		  var canvasWidth=document.getElementById('canvas').clientWidth;
		  var canvasHeight=document.getElementById('canvas').clientHeight;
		  var canvas = document.getElementById("canvas"); 
		  var context = canvas.getContext("2d");
		  canvas.height=canvasHeight;
		  canvas.width=canvasWidth;
		  var codeStr = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
		  var aCode = codeStr.split("");
		  var codeLength = aCode.length;
		  for (var i = 0; i <maxNum; i++) {
		      var deg = Math.random() * 30 * Math.PI / 180;//产生0~30之间的随机弧度
		      var txt = aCode[Math.floor(Math.random() * codeLength)];//得到随机的一个内容
		      show_num[i] = txt.toLowerCase();
		      var x = 2 + i * (canvasWidth/maxNum);
		      var y = (canvasHeight/2) + Math.random() * 8;
		      context.font = "bold "+(canvasWidth/maxNum)+"px 微软雅黑";
		      context.translate(x, y);
		      context.rotate(deg);
		      context.fillStyle = this.randomColor();
		      context.fillText(txt, 0, 0);
		      context.rotate(-deg);
		      context.translate(-x, -y);
		  }
		  for (var i = 0; i <4; i++) { //验证码上显示线条
		      context.strokeStyle =this.randomColor();
		      context.beginPath();
		      context.moveTo(Math.random() * canvasWidth, Math.random() * canvasHeight);
		      context.lineTo(Math.random() * canvasWidth, Math.random() * canvasHeight);
		      context.stroke();
		  }
		  for (var i = 0; i <20; i++) { //验证码上显示小点
		      context.strokeStyle = this.randomColor();
		      context.beginPath();
		      var x = Math.random() * canvasWidth;
		      var y = Math.random() * canvasHeight;
		      context.moveTo(x, y);
		      context.lineTo(x + 1, y + 1);
		      context.stroke();
		  }
		  canvas.onclick=null;
		  canvas.onclick=function(){ _this.draw(show_num,maxNum);}
		 },
		 randomColor:function() {
		 var r = Math.floor(Math.random() * 256);
		 var g = Math.floor(Math.random() * 256);
		 var b = Math.floor(Math.random() * 256);
		  return "rgb(" + r + "," + g + "," + b + ")";
		   }
	 }
/**
 * Form表单提交
 * @param {Object} obj
 */
function form(obj){ }
	form.prototype={
		radio:function(obj){
			let air=this.getNameDom(obj,".reai-form-radio");
			let _this=this;
			for(let z=0;z<air.length;z++){
				let formRadio=air[z].dom.querySelectorAll("span");
				for (let i = 0; i < formRadio.length; i++) {
				 formRadio[i].index=i; 
				if(obj[air[z].index].select==i){
				formRadio[i].querySelector('i').className="reai-ico reai-ico-radio radio-selected";
			   	 this.data[obj[air[z].index].name]=obj[air[z].index].value[i];
				 }else if(obj[air[z].index].select==null){
					formRadio[0].querySelector('i').className="reai-ico reai-ico-radio radio-selected";
					this.data[obj[air[z].index].name]=obj[air[z].index].value[0];
				 }
					formRadio[i].addEventListener('click',function(){
						for(let j=0;j<formRadio.length;j++){formRadio[j].querySelector('i').className="reai-ico reai-ico-circle";}
						this.querySelector('i').className="reai-ico reai-ico-radio radio-selected";
						obj[air[z].index].select=this.index;
						_this.data[obj[air[z].index].name]=obj[air[z].index].value[this.index];
					},false)
				}
			}
			
		},
		offOn:function(obj){
			let air =this.getNameDom(obj,'.reai-form-switch');
			let _this=this;
              for(let z=0;z<air.length;z++){
				  let formSwitch=air[z].dom.querySelector(".form-switch-box");
			      let attrSelect=air[z].dom.getAttribute('select');
				  if(!air[z].select){air[z].select=JSON.parse(attrSelect)}
				  if(air[z].select==true){
					 formSwitch.status=true;
					 formSwitch.className="form-switch-box switch-open",
					 formSwitch.querySelector("i").innerText="ON"
					 }else{formSwitch.status=false;}
				 formSwitch.addEventListener('click',function(){
					 if(this.status){
					 formSwitch.className="form-switch-box";
					 formSwitch.querySelector("i").innerText="OFF";
					 formSwitch.status=false;
					 }else{
						 formSwitch.status=true;
						 formSwitch.className="form-switch-box switch-open",
						 formSwitch.querySelector("i").innerText="ON";
					 }
					_this.data[air[z].name]=formSwitch.status;
				 },false)
				this.data[air[z].name]=formSwitch.status;
			  }
		},
		checkbox:function(obj){
		let air=this.getNameDom(obj,'.reai-form-checkbox');
		for(let z=0;z<air.length;z++){
			let checkbox=air[z].dom.querySelectorAll(".input-checkbox");
			let checkboxData=[];
			for(let i=0;i<checkbox.length;i++){
				let attr=checkbox[i].attributes;
				if(!air[z].value){air[z].value=[];}
				if(!air[z].select){air[z].select=[];}
				checkbox[i].index=i;
				checkbox[i].value=air[z].value[i]||attr['value'].nodeValue;
				air[z].select[i]=air[z].select[i]||(attr['select']&&JSON.parse(attr['select'].nodeValue))||false;
				if(air[z].select[i]==true){
			     checkbox[i].className="input-checkbox checkbox-selected";
			     checkbox[i].status=1;
			     checkboxData.push(checkbox[i].value);
				}else{checkbox[i].status=0;}
				checkbox[i].addEventListener('click',function(){
				if(this.status==0){
					this.className="input-checkbox checkbox-selected";
					this.status=1;
					checkboxData.push(this.value)
				}else{
					this.className="input-checkbox";
					this.status=0;
					if(checkboxData.indexOf(this.value)>-1){checkboxData.splice(checkboxData.indexOf(this.value),1)}
					}
				},false)
				
			}
			this.data[air[z].name]=checkboxData;
		}

		},
		select:function(obj){
			let air=this.getNameDom(obj,'.reai-form-select');
			let _this=this;
			for(let z=0;z<air.length;z++){
				let title=air[z].dom.querySelector(".reai-select-title");
				title.querySelector("input").value="";
				let list=air[z].dom.querySelector(".reai-select-list");
				let selectData=null;
				let Win=document.querySelector('body');
				title.status=0;
				let attr=air[z].dom.attributes;
				air[z].select=air[z].select||parseInt(attr['select'].nodeValue);
				if(air[z].select!=null&&air[z].select>=0){
				let attrValue=air[z].dom.querySelector('.reai-select-list').children[air[z].select+1].getAttribute('value');
                if(!air[z].value){air[z].value=[];}
				selectData=air[z].value[air[z].select]||attrValue;
				for(let j=0;j<list.children.length;j++){list.children[j].classList.remove("select-list-open");};
				try{list.children[air[z].select+1].classList.add("select-list-open");
				    title.querySelector('input').value=list.children[air[z].select+1].innerText.replace(/(^\s*)|(\s*$)/g, "");
				}catch(e){}
				}
				title.addEventListener('click',function(e){
					 e.stopPropagation(); 
					if(this.status==0){
						title.querySelector("i").className="reai-ico reai-ico-down"
						list.className="reai-select-list list-open";
						this.status=1;
						Win.data={list,title}
						Win.addEventListener('click',WinClick,false);
					}else{
						title.querySelector("i").className="reai-ico reai-ico-left"
						list.className="reai-select-list";
						this.status=0;
						Win.removeEventListener('click',WinClick,false)
					}
				},false)
				for(let i=1;i<list.children.length;i++){
					list.children[i].index=i;
					list.children[i].addEventListener('click',function(){
						for(let j=0;j<list.children.length;j++){list.children[j].classList.remove("select-list-open");};
						this.classList.add("select-list-open");
						title.querySelector("i").className="reai-ico reai-ico-left"
						list.className="reai-select-list";
						title.status=0;
						Win.removeEventListener('click',WinClick,false)
						title.querySelector('input').value=this.innerText.replace(/(^\s*)|(\s*$)/g, "");
						  if(!air[z].value){air[z].value=[];}
						selectData=air[z].value[this.index-1]||(this.attributes['value']&&this.attributes['value'].nodeValue);
						_this.data[air[z].name]=selectData;
						_this.inputDom[air[z].name]=title.querySelector('input');
					},false)
				}
			
			this.data[air[z].name]=selectData;this.inputDom[air[z].name]=title.querySelector('input');
			}
		   function WinClick(){
		       if(this.data.title.status==1){
				        this.data.title.querySelector("i").className="reai-ico reai-ico-left"
						this.data.list.className="reai-select-list";
						this.data.title.status=0;
					}
		   }
		},
		getNameDom:function(data,air){
			let vessel=[];
				for (let i = 0; i < data.length; i++) {
					let dom=document.querySelectorAll(air);
					let obj={};
					for(let j=0;j<dom.length;j++){
					if(data[i].name==dom[j].getAttribute('name')){
					obj.name=data[i].name;obj.index=i; obj.dom=dom[i];
					obj.select=data[i].select;obj.value=data[i].value;
					vessel.push(obj);break;}
						 }
				   }
		return vessel;
		},
		getInputData:function(){
			let formInput=document.querySelectorAll('.reai-form .reai-input');
			let formTextarea=document.querySelectorAll('.reai-form textarea');
			for (let i = 0; i < formInput.length; i++) {
				this.inputDom[formInput[i].name]=formInput[i];
				this.data[formInput[i].name]=formInput[i].value.replace(/(^\s*)|(\s*$)/g, "");
			}
			for (let i = 0; i < formTextarea.length; i++) {
				this.data[formTextarea[i].name]=formTextarea[i].value.replace(/(^\s*)|(\s*$)/g, "");
			}
		},
		verifier:function(data,fn){
			for (let item in data) {
				if(data[item]==""||data[item]==null||data[item]=='undefined'){
				 for (let name in  this.inputDom) {
				if(name==item){
				this.inputDom[name].classList.add('form-warn');
				this.inputDom[name].focus();
				reai.msg('内容输入为空！！！');
				if(this.inputDom[name].parentElement.classList.contains("reai-select-title")){
					this.inputDom[name].onclick=function(){this.classList.remove("form-warn");this.onclick=null;}
				}else{
					this.inputDom[name].oninput=function(){this.classList.remove("form-warn");this.oninput=null;}
				}
				return;
				     }
				   }
				}
			}
			fn(data);	
		},
		submit:function(data,fn){
			let _this=this;
             this.getInputData();
			let dom=document.querySelectorAll(data);
			for (let i = 0; i < dom.length; i++) {
				dom[i].onclick=function(){
					_this.getInputData();
					_this.verifier(_this.data,fn);
				}
				window.onkeydown = function (e) { 
				    var theEvent = window.event || e;
				    var code = theEvent.keyCode || theEvent.which || theEvent.charCode;
				    if (code == 13) {
				        _this.getInputData();
				        _this.verifier(_this.data,fn);
				    }
				}
			}
		}
	}
